server:
  port: 8080

spring:
  application:
    #应用的名称，非必需项。如果不配置，默认使用工程名
    name: timing_food_delivery
  #datasource:
    #druid:
     # driver-class-name: com.mysql.cj.jdbc.Driver
     # url: jdbc:mysql://localhost:3306/food_delivery_system?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
     # username: root
     # password: 4rfv$RFV
  web:
    resources:
      static-locations: classpath:/backend/, classpath:/front/
#在项目的application.yml中加入redis相关配置
  redis:
    host: localhost # 本地ip或者虚拟机IP。此处使用了本地的
    port: 6379
    password:
    database: 0 # 默认使用0号数据库
  cache:
    redis:
      time-to-live: 1800000  # 设置缓存有效期。非必需，如果没设置就是永久有效

# sharding jdbc框架 配置读写分离规则
  shardingsphere:
    datasource:
      names:
        master,slave # 名字自定即可。需要在master-data-source-name、slave-data-source-names中对应上
      # 主数据源
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.50.158:3306/food_delivery_system?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 4rfv$RFV
      # 从数据源
      slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.50.99:3306/food_delivery_system?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 4rfv$RFV
    masterslave:
      # 读写分离配置
      load-balance-algorithm-type: round_robin # 从库负载均衡策略：轮询
      # 最终的数据源名称
      name: dataSource
      # 主库数据源名称
      master-data-source-name: master
      # 从库数据源名称列表，多个逗号分隔
      slave-data-source-names: slave
    props:
      sql:
        show: true # 开启SQL显示，默认false。可以在控制台输出sql
  # 允许bean定义覆盖
  main:
    allow-bean-definition-overriding: true

mybatis-plus:
  configuration:
    #在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射
    map-underscore-to-camel-case: true # 开启后，表名address_book可以映射为实体类名AddressBook；字段名user_name可以映射为属性名userName
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: ASSIGN_ID    # 主键的生成策略

#文件上传时，上传到指定位置
timing_food_delivery:
  path: /Users/kxzhu/Downloads/img_upload/

